generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id        Int          @id @default(sequence(maxValue: 2147483647))
  name      String       @unique
  ign       String?      @unique
  lolId     String?      @unique
  updatedAt DateTime     @updatedAt
  createdAt DateTime     @default(now())
  gameStats PlayerStat[]
  stats     Stat[]
  TopStats  TopStats[]
}

model Game {
  id            Int          @id @default(sequence())
  matchId       String       @unique
  gameMode      String?
  isMatchLoaded Boolean      @default(false)
  periodId      Int?
  duration      Float?
  gameCreation  DateTime?
  updatedAt     DateTime     @updatedAt
  createdAt     DateTime     @default(now())
  period        Period?      @relation(fields: [periodId], references: [id])
  players       PlayerStat[]
  TopStats      TopStats[]
}

model PlayerStat {
  id                             Int         @id @default(sequence())
  gameId                         Int
  championId                     Int
  userId                         Int?
  sumName                        String
  puuid                          String
  isAllyTeam                     Boolean
  kills                          Int
  deaths                         Int
  assists                        Int
  damage                         Int
  tanked                         Int
  mitigated                      Int
  totalTimeCCDealt               Int
  isFirstBloodKill               Boolean
  doubleKills                    Int
  tripleKills                    Int
  quadraKills                    Int
  pentaKills                     Int
  timeCCingOthers                Int
  goldEarned                     Int
  totalMinionsKilled             Int
  neutralMinionsKilled           Int
  isWin                          Boolean
  totalTimeSpentDead             Int
  updatedAt                      DateTime    @updatedAt
  createdAt                      DateTime    @default(now())
  totalCs                        Int
  largestCriticalStrike          Int?
  largestKillingSpree            Int?
  longestTimeSpentLiving         Int?
  spell1Casts                    Int?
  spell2Casts                    Int?
  spell3Casts                    Int?
  spell4Casts                    Int?
  summoner1Casts                 Int?
  summoner2Casts                 Int?
  totalDamageShieldedOnTeammates Int?
  totalHeal                      Int?
  totalHealsOnTeammates          Int?
  champion                       Champion    @relation(fields: [championId], references: [id])
  game                           Game        @relation(fields: [gameId], references: [id])
  user                           User?       @relation(fields: [userId], references: [id])
  stat                           Stat?
  items                          Item[]      @relation("ItemToPlayerStat")
  sumSpells                      SumSpells[] @relation("PlayerStatToSumSpells")

  @@unique([gameId, puuid])
}

model SumSpells {
  id        Int          @id @default(sequence(maxValue: 2147483647))
  sumId     Int          @unique
  name      String?      @unique
  updatedAt DateTime     @updatedAt
  createdAt DateTime     @default(now())
  players   PlayerStat[] @relation("PlayerStatToSumSpells")
}

model Item {
  id        Int          @id @default(sequence(maxValue: 2147483647))
  itemId    Int          @unique
  name      String?      @unique
  updatedAt DateTime     @updatedAt
  createdAt DateTime     @default(now())
  players   PlayerStat[] @relation("ItemToPlayerStat")
}

model Stat {
  id             Int          @id @default(sequence())
  userId         Int
  championStatId Int
  periodId       Int
  playerStatId   Int          @unique
  kills          Int
  deaths         Int
  assists        Int
  damage         Int
  reduction      Int
  kda            Int
  perf           Int
  xClass         Int
  comment        String?
  updatedAt      DateTime     @updatedAt
  createdAt      DateTime     @default(now())
  champion       ChampionStat @relation(fields: [championStatId], references: [id])
  period         Period       @relation(fields: [periodId], references: [id])
  playerStat     PlayerStat   @relation(fields: [playerStatId], references: [id])
  user           User         @relation(fields: [userId], references: [id])
  TopStats       TopStats[]
}

model Champion {
  id        Int            @id @default(sequence(maxValue: 2147483647))
  name      String         @unique
  support   Boolean        @default(false)
  updatedAt DateTime       @updatedAt
  createdAt DateTime       @default(now())
  stats     ChampionStat[]
  players   PlayerStat[]
  TopStats  TopStats[]
}

model ChampionStat {
  id         Int      @id @default(sequence(maxValue: 2147483647))
  periodId   Int
  winrate    Float
  championId Int
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())
  champion   Champion @relation(fields: [championId], references: [id])
  period     Period   @relation(fields: [periodId], references: [id])
  userStats  Stat[]

  @@unique([championId, periodId])
}

model Period {
  id            Int            @id @default(sequence(maxValue: 2147483647))
  name          String
  date          DateTime
  updatedAt     DateTime       @updatedAt
  createdAt     DateTime       @default(now())
  championStats ChampionStat[]
  games         Game[]
  stats         Stat[]
}

model LolRequest {
  id        Int      @id @default(sequence(maxValue: 2147483647))
  count     Int
  createdAt DateTime @default(now())
}

view TopStats {
  id                             Int @unique
  gameId                         Int
  championId                     Int
  userId                         Int?
  sumName                        String
  puuid                          String
  isAllyTeam                     Boolean
  kills                          Int
  deaths                         Int
  assists                        Int
  damage                         Int
  tanked                         Int
  mitigated                      Int
  totalTimeCCDealt               Int
  isFirstBloodKill               Boolean
  doubleKills                    Int
  tripleKills                    Int
  quadraKills                    Int
  pentaKills                     Int
  timeCCingOthers                Int
  goldEarned                     Int
  totalMinionsKilled             Int
  neutralMinionsKilled           Int
  isWin                          Boolean
  totalTimeSpentDead             Int
  updatedAt                      DateTime
  createdAt                      DateTime
  totalCs                        Int
  largestCriticalStrike          Int?
  largestKillingSpree            Int?
  longestTimeSpentLiving         Int?
  spell1Casts                    Int?
  spell2Casts                    Int?
  spell3Casts                    Int?
  spell4Casts                    Int?
  summoner1Casts                 Int?
  summoner2Casts                 Int?
  totalDamageShieldedOnTeammates Int?
  totalHeal                      Int?
  totalHealsOnTeammates          Int?
  statId                         Int?
  totalTanked                    BigInt
  dmgPerMinute                   Float
  tankedPerMinute                Float
  goldPerMinute                  Float
  dmgPerGold                     Float
  game                           Game     @relation(fields: [gameId], references: [id])
  user                           User?     @relation(fields: [userId], references: [id])
  champion                       Champion @relation(fields: [championId], references: [id])
  stat                           Stat?    @relation(fields: [statId], references: [id])
}
