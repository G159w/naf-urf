generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        Int          @id @default(autoincrement())
  name      String       @unique
  ign       String?      @unique
  lolId     String?      @unique
  stats     Stat[]
  gameStats PlayerStat[]
  updatedAt DateTime     @updatedAt
  createdAt DateTime     @default(now())
}

model Game {
  id            Int          @id @default(autoincrement())
  matchId       String       @unique
  gameMode      String?
  isMatchLoaded Boolean      @default(false)
  players       PlayerStat[]
  periodId      Int?
  period        Period?      @relation(fields: [periodId], references: [id])
  duration      Float?
  gameCreation  DateTime?
  updatedAt     DateTime     @updatedAt
  createdAt     DateTime     @default(now())
}

model PlayerStat {
  id                   Int         @id @default(autoincrement())
  gameId               Int
  game                 Game        @relation(fields: [gameId], references: [id])
  championId           Int
  champion             Champion    @relation(fields: [championId], references: [id])
  userId               Int?
  user                 User?       @relation(fields: [userId], references: [id])
  stat                 Stat?
  sumName              String
  puuid                String
  isAllyTeam           Boolean
  kills                Int
  deaths               Int
  assists              Int
  damage               Int
  tanked               Int
  mitigated            Int
  totalTimeCCDealt     Int
  isFirstBloodKill     Boolean
  doubleKills          Int
  tripleKills          Int
  quadraKills          Int
  pentaKills           Int
  timeCCingOthers      Int
  goldEarned           Int
  totalMinionsKilled   Int
  neutralMinionsKilled Int
  isWin                Boolean
  totalTimeSpentDead   Int
  sumSpells            SumSpells[]
  items                Item[]
  updatedAt            DateTime    @updatedAt
  createdAt            DateTime    @default(now())
}

model SumSpells {
  id        Int          @id @default(autoincrement())
  sumId     Int          @unique
  name      String?      @unique
  players   PlayerStat[]
  updatedAt DateTime     @updatedAt
  createdAt DateTime     @default(now())
}

model Item {
  id        Int          @id @default(autoincrement())
  itemId    Int          @unique
  name      String?      @unique
  players   PlayerStat[]
  updatedAt DateTime     @updatedAt
  createdAt DateTime     @default(now())
}

model Stat {
  id             Int          @id @default(autoincrement())
  userId         Int
  user           User         @relation(fields: [userId], references: [id])
  championStatId Int
  champion       ChampionStat @relation(fields: [championStatId], references: [id])
  periodId       Int
  period         Period       @relation(fields: [periodId], references: [id])
  playerStatId   Int          @unique
  playerStat     PlayerStat   @relation(fields: [playerStatId], references: [id])
  kills          Int
  deaths         Int
  assists        Int
  damage         Int
  reduction      Int
  kda            Int
  perf           Int
  xClass         Int
  comment        String?
  updatedAt      DateTime     @updatedAt
  createdAt      DateTime     @default(now())
}

model Champion {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  players   PlayerStat[]
  stats     ChampionStat[]
  support   Boolean        @default(false)
  updatedAt DateTime       @updatedAt
  createdAt DateTime       @default(now())
}

model ChampionStat {
  id         Int      @id @default(autoincrement())
  periodId   Int
  period     Period   @relation(fields: [periodId], references: [id])
  winrate    Float
  championId Int
  champion   Champion @relation(fields: [championId], references: [id])
  userStats  Stat[]
  updatedAt  DateTime @updatedAt
  createdAt  DateTime @default(now())

  @@unique([championId, periodId])
}

model Period {
  id            Int            @id @default(autoincrement())
  name          String
  date          DateTime
  games         Game[]
  championStats ChampionStat[]
  stats         Stat[]
  updatedAt     DateTime       @updatedAt
  createdAt     DateTime       @default(now())
}

model LolRequest {
  id        Int      @id @default(autoincrement())
  count     Int
  createdAt DateTime @default(now())
}
